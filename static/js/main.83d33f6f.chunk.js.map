{"version":3,"sources":["reducers/weatherReducer.js","reducers/otherCityReducer.js","store.js","components/Navbar.js","helpers/getCityName.js","helpers/config.js","actions/weatherAction.js","components/WeatherForm.js","components/LocationForm.js","components/MyCity.js","components/SearchForm.js","components/OtherCity.js","App.js","serviceWorker.js","index.js"],"names":["initialState","item","weatherReducer","state","arguments","length","undefined","action","type","Object","objectSpread","payload","otherCityReducer","rootReducer","combineReducers","middleware","thunk","store","createStore","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","Navbar","react_default","a","createElement","className","Link","to","PureComponent","getCityName","results","c","lc","component","city","r","rl","result","types","address_components","long_name","weatherApi","getWeather","dispatch","navigator","geolocation","getCurrentPosition","data","fetch","coords","latitude","longitude","then","json","concat","weather","catch","err","console","log","getOtherWeather","otherWeather","WeatherForm","this","props","alt","src","current","condition","icon","text","temp_c","wind_dir","wind_kph","connect","bindActionCreators","LocationForm","location","country","name","localtime","MyCity","components_LocationForm","components_WeatherForm","SearchForm","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","bind","assertThisInitialized","onSubmit","e","setState","defineProperty","target","value","preventDefault","onAdd","placeholder","OtherCity","components_SearchForm","getWeatherDetails","App","es","BrowserRouter","components_Navbar","Route","exact","path","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.83d33f6f.chunk.js","sourcesContent":["const initialState = {\n  item: null\n}\n\nconst weatherReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'GET_MY_CITY_WEATHER':\n      return {\n        ...state,\n        item: action.payload\n      };\n    default:\n      return state;\n  }\n}\n\nexport default weatherReducer;","const initialState = {\n  item: null\n}\n\nconst otherCityReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'GET_OTHER_CITY_WEATHER':\n      return {\n        ...state,\n        item: action.payload\n      };\n    default:\n      return state;\n  }\n}\n\nexport default otherCityReducer;","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport weatherReducer from './reducers/weatherReducer';\nimport otherCityReducer from './reducers/otherCityReducer';\n\nconst rootReducer = combineReducers({\n  weatherReducer,\n  otherCityReducer\n});\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n)\n\nexport default store;","import React, { PureComponent } from 'react';\nimport { Link } from 'react-router-dom';\n\n\nclass Navbar extends PureComponent {\n\trender() {\n\t\treturn (\n\t\t\t<nav className=\"nav-wrapper #64b5f6 blue lighten-2\">\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div className=\"brand-logo\">Weather App</div>\n\t\t\t\t\t<ul className=\"right\">\n\t\t\t\t\t\t<li><Link to=\"/\">My city</Link></li>\n\t\t\t\t\t\t<li><Link to=\"/other\">Other city</Link></li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</nav>\n\t\t)\n\t}\n}\n\nexport default Navbar;\n","const getCityName = (results) => {\n\tif (results[1]) {\n\t\tlet city = null\n\t\tlet c, lc, component;\n\t\tfor (let r = 0, rl = results.length; r < rl; r += 1) {\n\t\t\tlet result = results[r];\n\n\t\t\tif (!city && result.types[0] === 'locality') {\n\t\t\t\tfor (c = 0, lc = result.address_components.length; c < lc; c += 1) {\n\t\t\t\t\tcomponent = result.address_components[c];\n\n\t\t\t\t\tif (component.types[0] === 'locality') {\n\t\t\t\t\t\tcity = component.long_name;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (!city && result.types[0] === 'administrative_area_level_1') {\n\t\t\t\tfor (c = 0, lc = result.address_components.length; c < lc; c += 1) {\n\t\t\t\t\tcomponent = result.address_components[c];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (city) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn city;\n\t}\n}\n\nexport default getCityName;","export const googleMapsApiKey = \"AIzaSyCTbv6-mpOqcBaO0RUBZRmXElCDWK0pNOU\";\n\nexport const weatherApiKey = \"c8e426cbb3864931b2b112415181112\";\n\nexport const weatherApi = \"https://api.apixu.com/v1/forecast.json?key=\";","import getCityName from \"../helpers/getCityName\";\nimport { googleMapsApiKey, weatherApiKey, weatherApi } from \"../helpers/config\";\n\nexport const getWeather = () => dispatch => {\n  navigator.geolocation.getCurrentPosition(data => {\n    fetch(\n      \"https://maps.googleapis.com/maps/api/geocode/json?latlng=\" +\n      data.coords.latitude +\n      \",\" +\n      data.coords.longitude +\n      \"&sensor=true&key=\" +\n      googleMapsApiKey +\n      \"&language=en\"\n    )\n      .then(result => result.json())\n      .then(data => {\n        fetch(`${weatherApi}${weatherApiKey}&q=${getCityName(data.results)}`)\n          .then(result => result.json())\n          .then(weather =>\n            dispatch({\n              type: \"GET_MY_CITY_WEATHER\",\n              payload: weather\n            })\n          );\n      })\n      .catch(err => console.log(err));\n  });\n};\n\nexport const getOtherWeather = city => dispatch => {\n  fetch(`${weatherApi}${weatherApiKey}&q=${city}`)\n    .then(result => result.json())\n    .then(otherWeather => {\n      dispatch({\n        type: \"GET_OTHER_CITY_WEATHER\",\n        payload: otherWeather\n      });\n    })\n    .catch(err => console.log(err));\n};\n","import React, { PureComponent } from 'react'\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { getWeather } from '../actions/weatherAction';\n\n\n\n\nclass WeatherForm extends PureComponent {\n  componentDidMount() {\n    this.props.getWeather();\n  }\n\n  render() {\n    if (this.props.weather) {\n      return (\n        <div>\n          <img alt=\"icon\" src={this.props.weather.current.condition.icon} />\n          <div>{this.props.weather.current.condition.text}</div>\n          <div>Temperature is {this.props.weather.current.temp_c}°C</div>\n          <div>Wind is {this.props.weather.current.wind_dir},\n        speed is {this.props.weather.current.wind_kph} k/h </div>\n        </div>\n      )\n    }\n    return null;\n  }\n}\n\n\nconst mapStateToProps = state => ({\n  weather: state.weatherReducer.item\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      getWeather\n    },\n    dispatch\n  );\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeatherForm);\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { getWeather } from '../actions/weatherAction';\n\n\nclass LocationForm extends PureComponent {\n  componentDidMount(){\n    this.props.getWeather();\n  }\n\n  render() {\n    if(this.props.weather) {\n    return (\n      <div>\n        <div>{this.props.weather.location.country}</div>\n        <div>{this.props.weather.location.name}</div>\n        <div>Local time: {this.props.weather.location.localtime}</div>\n      </div>\n    )}\n    return null;\n  }\n}\n\nconst mapStateToProps = state => ({\n  weather: state.weatherReducer.item\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      getWeather\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LocationForm);\n","import React, { PureComponent } from 'react';\n\nimport WeatherForm from './WeatherForm';\nimport LocationForm from './LocationForm';\nimport '../App.css';\n\nclass MyCity extends PureComponent {\n  render() {\n    return (\n      <div className=\"collection my-city\">\n        <LocationForm />\n        <WeatherForm />\n      </div>\n    )\n  }\n}\n\nexport default MyCity;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\n\nclass SearchForm extends PureComponent {\n  static propTypes = {\n    onAdd: PropTypes.func.isRequired,\n  }\n\n  constructor() {\n    super();\n    this.state = {\n      city: ''\n    }\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const city = this.state.city;\n    if (city) {\n      this.props.onAdd(city);\n      this.setState({\n        city: ''\n      })\n    } else {\n      return;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"search-container\">\n        <form className=\"search\" onSubmit={this.onSubmit}>\n          <label>\n            Search city:\n            </label>\n          <input placeholder=\"Berlin, Paris, Madrid...\" name=\"city\" type=\"text\"\n            onChange={this.onChange} value={this.state.city}></input>\n          <button className=\"waves-effect waves-light btn \" type=\"submit\">Check weather</button>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default SearchForm;\n","import React, { PureComponent } from 'react'\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { getOtherWeather } from '../actions/weatherAction';\n\nimport SearchForm from './SearchForm';\n\nclass OtherCity extends PureComponent {\n\n  getWeatherDetails() {\n    if (this.props.otherWeather) {\n      return <div className=\"collection other\">\n        <img alt=\"icon\" src={this.props.otherWeather.current.condition.icon} />\n        <div>{this.props.otherWeather.current.condition.text}</div>\n        <div>Temperature is {this.props.otherWeather.current.temp_c}°C</div>\n        <div>Wind is {this.props.otherWeather.current.wind_dir},\n    speed is {this.props.otherWeather.current.wind_kph} k/h </div>\n      </div>\n    }\n    return null\n  }\n\n  render() {\n    return (\n      <div>\n        <SearchForm onAdd={this.props.getOtherWeather} />\n        {this.getWeatherDetails()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  otherWeather: state.otherCityReducer.item\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      getOtherWeather\n    },\n    dispatch\n  )\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OtherCity);\n","import React, { PureComponent } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport MyCity from './components/MyCity';\nimport OtherCity from './components/OtherCity';\n\nclass App extends PureComponent {\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div>\n            <Navbar />\n            <Route exact path=\"/\" component={MyCity} />\n            <Route path=\"/other\" component={OtherCity} />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}